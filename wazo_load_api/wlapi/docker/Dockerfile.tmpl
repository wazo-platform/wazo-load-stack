FROM python:3.10-bullseye AS builder
RUN python3.10 -m venv /opt/venv
# Activate virtual env
ENV PATH="/opt/venv/bin:$PATH"

RUN mkdir -p /usr/src/wlapi/wlapi

WORKDIR /usr/src/wlapi

COPY wlapi/etc /etc
COPY wlapi/tests/start-wlapi.sh /usr/local/bin/start-wlapi
COPY . wlapi/

RUN pip install --upgrade pip
WORKDIR /usr/src/wlapi/wlapi
RUN make install

RUN mkdir /opt/voipctl
WORKDIR /opt/voipctl
COPY wlapi/voipctl /opt/voipctl
RUN pip install .


FROM wda-load-testing:0.0.23
ENV DEBIAN_FRONTEND noninteractive

RUN  apt update && apt -y upgrade && \
    apt -y install build-essential zlib1g-dev libncurses5-dev \
	libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev \
    libsqlite3-dev wget libbz2-dev python3-pip && \
    wget https://www.python.org/ftp/python/3.10.12/Python-3.10.12.tgz && \
    tar -xf Python-3.10.*.tgz && cd Python-3.10.*/ && \
    ./configure --prefix=/usr/local --enable-optimizations --enable-shared LDFLAGS="-Wl,-rpath /usr/local/lib" && \
    make -j $(nproc) && make altinstall

RUN DEBIAN_FRONTEND=noninteractive apt update && apt -y upgrade && \
    apt-get install -y libre0 librem0 \
    vim \
    apulse alsaplayer-oss alsaplayer-common alsa-utils alsa-oss \
    alsa-tools libpulse0 \
    libasound2-dev libasound2 libasound2-data \
    libsndfile1-dev \
    apt-utils mpg123 pulseaudio \
    libopus-dev libasound2-dev libmosquitto-dev libspandsp-dev libpulse-dev \
    clang make pkg-config git libssl-dev wget ca-certificates libz-dev && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /opt
RUN wget https://github.com/Kitware/CMake/releases/download/v3.27.1/cmake-3.27.1.tar.gz &&\
    tar -zxvf cmake-3.27.1.tar.gz && \
    cd cmake-3.27.1 && ./bootstrap && \
    make && make install

RUN git clone -b v3.4.0 --depth=1 https://github.com/baresip/re.git
RUN cd re && \
    cmake -B build -DCMAKE_BUILD_TYPE=Release && \
    cmake --build build -j && \
    cmake --install build && \
    ldconfig

WORKDIR /root/
RUN git clone -b v3.4.0 --depth=1 https://github.com/baresip/baresip.git && \
    cd baresip && \
    cmake -B build -DCMAKE_BUILD_TYPE=Release && \
    cmake --build build -j && \
    cmake --install build &&\
    echo "/usr/local/lib" > /etc/ld.so.conf.d/libc.conf
RUN ldconfig

ENV PATH "/opt/venv/bin:$PATH"

COPY --from=builder /opt/venv /opt/venv
COPY --from=builder /usr/local/bin/start-wlapi /usr/local/bin/start-wlapi
COPY --from=builder /usr/src/wlapi /usr/src/wlapi
COPY --from=builder /etc /etc
COPY wlapi/docker/.baresip /root/.baresip
COPY wlapi/docker/docker-entrypoint.sh /docker-entrypoint.sh

RUN ldconfig

RUN groupadd -r pulse-access && \
    usermod -aG pulse-access root

RUN useradd -r -s /bin/false systemd-resolve && \
    useradd -r -s /bin/false systemd-timesync && \
    useradd -r -s /bin/false systemd-network && \
    useradd -r -s /bin/false pulse && \
    useradd -r -s /bin/false rtkit && \
    useradd -r -s /bin/false messagebus

RUN mkdir -p /var/run/dbus
RUN mkdir -p /etc/wazo-load-api/conf.d/

LABEL maintainer=__MAINTAINER__
LABEL image_status=__STATUS__

ENTRYPOINT ["/docker-entrypoint.sh"]